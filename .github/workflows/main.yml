name: Microsoft Rewards Farmer

on:
  schedule:
    - cron: '0 10 * * *' # Daily at 10:00 UTC
  workflow_dispatch:

jobs:
  farm:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable unzip

    - name: Install Chromedriver
      run: |
        # Get Chrome major version
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -1)
        echo "Chrome version: $CHROME_VERSION"
        
        # Fetch the latest Chromedriver version compatible with Chrome
        DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION%%.*}")
        if [ -z "$DRIVER_VERSION" ]; then
          echo "Error: Could not find Chromedriver version for Chrome $CHROME_VERSION"
          exit 1
        fi
        echo "Chromedriver version: $DRIVER_VERSION"
        
        # Download and install Chromedriver
        wget -q "https://chromedriver.storage.googleapis.com/$DRIVER_VERSION/chromedriver_linux64.zip"
        if [ $? -ne 0 ]; then
          echo "Error: Failed to download Chromedriver $DRIVER_VERSION"
          exit 1
        fi
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create accounts.json
      env:
        ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}
      run: |
        if [ -z "$ACCOUNTS_JSON" ]; then
          echo "Error: ACCOUNTS_JSON secret is not set"
          exit 1
        fi
        echo "$ACCOUNTS_JSON" > accounts.json
        cat accounts.json # For debugging

    - name: Run farmer
      run: |
        python main.py 2>&1 | tee farmer.log
      continue-on-error: true

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: farmer-logs
        path: farmer.log
