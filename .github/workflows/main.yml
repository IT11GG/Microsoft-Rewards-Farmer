name: Microsoft Rewards Farmer

on:
  schedule:
    - cron: '0 10 * * *' # Щодня о 10:00 UTC
  workflow_dispatch:

jobs:
  farm:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'
        cache: 'pip'

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y unzip

    - name: Install specific Chrome version
      run: |
        wget -q https://dl.google.com/linux/chrome/deb/pool/main/g/google-chrome-stable/google-chrome-stable_126.0.6478.126-1_amd64.deb
        sudo dpkg -i google-chrome-stable_126.0.6478.126-1_amd64.deb || sudo apt-get install -f -y
        rm google-chrome-stable_126.0.6478.126-1_amd64.deb
        google-chrome --version

    - name: Install Chromedriver
      run: |
        # Отримуємо встановлену версію Chrome, наприклад "Google Chrome 126.0.6478.126"
        CHROME_VERSION_FULL=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+\.\d+')
        echo "Встановлена повна версія Chrome: $CHROME_VERSION_FULL"

        # Візьмемо лише перші три числа версії (наприклад, 126.0.6478)
        CHROME_VERSION_SHORT=$(echo $CHROME_VERSION_FULL | cut -d '.' -f 1,2,3)
        echo "Коротка версія Chrome для пошуку драйвера: $CHROME_VERSION_SHORT"

        # Спроба отримати сумісну версію Chromedriver для Chrome 126.0.6478
        DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION_SHORT}")

        # Якщо не знайшли - беремо основну версію (перші дві частини, наприклад 126.0)
        if [ -z "$DRIVER_VERSION" ]; then
          CHROME_VERSION_MAJOR_MINOR=$(echo $CHROME_VERSION_FULL | cut -d '.' -f 1,2)
          echo "Не знайдено драйвер для $CHROME_VERSION_SHORT, пробуємо для $CHROME_VERSION_MAJOR_MINOR"
          DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION_MAJOR_MINOR}")
        fi

        # Якщо знову не знайшли — беремо просто останню доступну версію
        if [ -z "$DRIVER_VERSION" ]; then
          echo "Не вдалося знайти сумісну версію Chromedriver для Chrome $CHROME_VERSION_FULL"
          echo "Встановимо останню доступну версію Chromedriver"
          DRIVER_VERSION=$(curl -sS "https://chromedriver.storage.googleapis.com/LATEST_RELEASE")
        fi

        echo "Встановлюємо Chromedriver версії: $DRIVER_VERSION"

        wget -q "https://chromedriver.storage.googleapis.com/${DRIVER_VERSION}/chromedriver_linux64.zip"
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create accounts.json
      env:
        ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}
      run: |
        if [ -z "$ACCOUNTS_JSON" ]; then
          echo "Помилка: Секрет ACCOUNTS_JSON не встановлено"
          exit 1
        fi
        echo "$ACCOUNTS_JSON" > accounts.json
        cat accounts.json # Для налагодження

    - name: Initialize farmer.log
      run: |
        echo "Ініціалізація farmer.log..." > farmer.log

    - name: Run farmer
      run: |
        python main.py 2>&1 | tee -a farmer.log
      continue-on-error: true

    - name: Upload logs
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: farmer-logs
        path: farmer.log
